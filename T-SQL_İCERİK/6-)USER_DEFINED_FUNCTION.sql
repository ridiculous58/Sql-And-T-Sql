CREATE FUNCTION TOPLA(
@SAYI1 INT,
@SAYI2 INT
)
RETURNS INT
AS
BEGIN 

RETURN @SAYI1+@SAYI2

END
GO


SELECT dbo.TOPLA(5,6)


--YAS BULMA BENIM YAPTIGIM
CREATE FUNCTION dbo.YASBULMA
(
@YASIBULUNCAKID INT = 1
)
RETURNS INT
AS
BEGIN
	RETURN (SELECT DATEDIFF(YEAR,BIRTHDATE,GETDATE()) FROM CUSTOMERS WHERE CUSTOMERS.ID = @YASIBULUNCAKID)
END
GO


SELECT NAME_,SURNAME,BIRTHDATE,DBO.YASBULMA(6) AS 'YASI' FROM CUSTOMERS WHERE ID = 6

--HOCANIN YAPTIGI
CREATE FUNCTION dbo.CALCULATE_AGE
(
@BIRTHDATE AS DATE
)
RETURNS INT
AS
BEGIN
	DECLARE @RESULT INT
	SET @RESULT = DATEDIFF(YEAR,@BIRTHDATE,GETDATE())
	RETURN @RESULT
END
GO

SELECT TOP 1000 
*,
dbo.CALCULATE_AGE(BIRTHDATE) AS AGE
FROM CUSTOMERS 

--- ---------------------------------------------------------------

--DAY MONTH
------------------------------------------------------------------------------------------------------------------------------
CREATE FUNCTION dbo.FIND_MONTH
(
@DATE DATETIME
)
RETURNS VARCHAR(10)
AS
BEGIN
DECLARE @RESULT VARCHAR(10)

	SELECT @RESULT = CASE DATEPART(MONTH,@DATE)
	WHEN 1 THEN '01.OCAK' 
	WHEN 2 THEN '02.ŞUBAT' 
	WHEN 3 THEN '03.MART' 
	WHEN 4 THEN '04.NISAN' 
	WHEN 5 THEN '05.MAYIS' 
	WHEN 6 THEN '06.HAZIRAN' 
	WHEN 7 THEN '07.TEMMUZ' 
	WHEN 8 THEN '08.AGUSTOS' 
	WHEN 9 THEN '09.EYLUL' 
	WHEN 10 THEN '10.EKIM' 
	WHEN 11 THEN '11.KASIM' 
	WHEN 12 THEN '12.ARALIK'
	ELSE 'TANIMSIZ'
	END
	RETURN @RESULT
END
GO
------------------------------------------------------------------------------------------------------------------------------
CREATE FUNCTION dbo.FIND_DAY
(
@DATE_ DATETIME
)
RETURNS VARCHAR(10)
AS
BEGIN
DECLARE @RESULT VARCHAR(10)

	SELECT @RESULT = CASE DATEPART(DW,@DATE_)
	WHEN 2 THEN '1.PZT'
	WHEN 3 THEN '2.SAL'
	WHEN 4 THEN '3.CAR'
	WHEN 5 THEN '4.PER'
	WHEN 6 THEN '5.CUM'
	WHEN 7 THEN '6.CMT'
	WHEN 1 THEN '7.PAZ'
	ELSE 'NOT_FOUND'
	END

	RETURN @RESULT
END
GO
------------------------------------------------------------------------------------------------------------------------------


SELECT TOP 1000
[ID], [NAMESURNAME], [GENDER], [BIRTHDATE], [CITY], [TOWN], [TELNR], [NAME_], [SURNAME], 
[TCNO],DBO.FIND_MONTH([BIRTHDATE]) AS AY,DBO.FIND_DAY([BIRTHDATE]) AS GUN FROM CUSTOMERS


--URUN ANALIZI
USE ETRADE
GO

SELECT
ITM.ITEMCODE AS MALZEMEKODU,
ITM.ITEMNAME AS MALZEMEADI,
MIN(OD.UNITPRICE) AS ENDUSUKFIYAT,
MAX(OD.UNITPRICE) AS ENYUKSEKFIYAT,
AVG(OD.UNITPRICE) AS ORTALAMAFIYAT,
SUM(OD.LINETOTAL) AS TOPLAMSATIRTUTAR,
SUM(OD.AMOUNT) AS TOPLAMSATISMIKTAR
FROM 
ORDERDETAILS OD
INNER JOIN ORDERS O ON OD.ORDERID = O.ID
INNER JOIN ITEMS ITM ON ITM.ID = OD.ITEMID
GROUP BY ITM.ITEMCODE,ITM.ITEMNAME
GO
------------------------------------------------------------------------------------------------------------------------------
--SUBQUERYY ILE YAPALIM

SELECT ITM.ID,ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENDUSUKFIYAT,
(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENYUKSEKFIYAT

FROM ITEMS ITM

--FONKSIYON OLUSTURLIM

--MIN
CREATE FUNCTION DBO.GET_ITEM_MINPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS
BEGIN
DECLARE @RESULT AS FLOAT
SELECT @RESULT = MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
RETURN @RESULT
END

--MAX
CREATE FUNCTION DBO.GET_ITEM_MAXPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS
BEGIN
DECLARE @RESULT AS FLOAT
SELECT @RESULT = MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
RETURN @RESULT
END

--AVG
CREATE FUNCTION DBO.GET_ITEM_AVGPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS
BEGIN
DECLARE @RESULT AS FLOAT
SELECT @RESULT = AVG(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
RETURN @RESULT
END



--TOTALSALE
CREATE FUNCTION DBO.GET_ITEM_TOTALSALE(@ITEMID AS INT)
RETURNS FLOAT
AS
BEGIN
DECLARE @RESULT AS FLOAT
SELECT @RESULT = SUM(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
RETURN @RESULT
END

--SUBQUERYSIZ YAPALIM
--USER DEFINED FUNCTION SATIR SATIR CALISTIGI ICIN INDEX OLMADIGINDAN KODUMUZ UZUN SURECEK
SELECT 
ITM.ID,ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
--(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENDUSUKFIYAT,
--(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENYUKSEKFIYAT
dbo.GET_ITEM_MINPRICE(ITM.ID) AS ENDUSUKFIYAT,
dbo.GET_ITEM_MAXPRICE(ITM.ID) AS ENDYUSEKFIYAT,
dbo.GET_ITEM_AVGPRICE(ITM.ID) AS ORTALAMAFIYAT,
[dbo].[GET_ITEM_TOTALSALE](ITM.ID) AS TOPLAMSATIS
FROM ITEMS ITM

--INDEXI OLUSTURDUK ISTATISLIKLERI GUNCELLIYELIM
UPDATE STATISTICS [dbo].[ORDERDETAILS]
--INDEXSIZ SORGUMUZ 7 SN SURERKEN INDEXLI 0 SANIYE SURDU

SELECT
ITM.ITEMCODE AS MALZEMEKODU,
ITM.ITEMNAME AS MALZEMEADI,
MIN(OD.UNITPRICE) AS ENDUSUKFIYAT,
MAX(OD.UNITPRICE) AS ENYUKSEKFIYAT,
AVG(OD.UNITPRICE) AS ORTALAMAFIYAT,
SUM(OD.LINETOTAL) AS TOPLAMSATIRTUTAR,
SUM(OD.AMOUNT) AS TOPLAMSATISMIKTAR
FROM 
ORDERDETAILS OD
INNER JOIN ORDERS O ON OD.ORDERID = O.ID
INNER JOIN ITEMS ITM ON ITM.ID = OD.ITEMID
GROUP BY ITM.ITEMCODE,ITM.ITEMNAME
GO -- INNER JOINLI 1 SN SURDU FONKSIYONLU 3 SN COZUMUNU BULALIM NENDEN YAVAS CUNKU FUNCTION ROW ROW CALISIR

--FONKSIYON COPLUGU OLDU HIN MAX AVG ... AYNI ISLEMLER ICIN FARKLI FUNCTION TANIMLADIK BU DURUMU COZMEMIZ LAZIM

CREATE FUNCTION DBO.GET_ITEM_TPRICE(@ITEMID AS INT, @PRICETYPE AS VARCHAR(10) )
RETURNS FLOAT
AS
BEGIN 
	
	DECLARE  @RESULT FLOAT
	SELECT @RESULT = CASE @PRICETYPE
	
		WHEN 'AVG' THEN AVG(UNITPRICE)
		WHEN 'MAX' THEN MAX(UNITPRICE)
		WHEN 'MIN' THEN MIN(UNITPRICE)
		END
	
	FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID

	RETURN @RESULT
END

--SUBQUERYSIZ YAPALIM
--USER DEFINED FUNCTION SATIR SATIR CALISTIGI ICIN INDEX OLMADIGINDAN KODUMUZ UZUN SURECEK
SELECT 
ITM.ID,ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
--(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENDUSUKFIYAT,
--(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENYUKSEKFIYAT
[dbo].[GET_ITEM_TPRICE](ITM.ID,'MIN') AS ENDUSUKFIYAT,
[dbo].[GET_ITEM_TPRICE](ITM.ID,'MAX') AS ENDYUSEKFIYAT,
[dbo].[GET_ITEM_TPRICE](ITM.ID,'AVG') AS ORTALAMAFIYAT,
[dbo].[GET_ITEM_TOTALSALE](ITM.ID) AS TOPLAMSATIS
FROM ITEMS ITM

--------------------------------------------------------------------------------------

CREATE FUNCTION DBO.GET_ITEM_INFO
(
@ITEMID AS INT
)
RETURNS TABLE
AS	
RETURN(
SELECT
AVG(UNITPRICE) AVGPRICE,
MAX(UNITPRICE) MAXPRICE,
MIN(UNITPRICE) MINPRICE,
SUM(LINETOTAL) TOTALSALE,
SUM(AMOUNT) TOTALAMOUNT
FROM ORDERDETAILS OD WHERE OD.ITEMID = @ITEMID
)

SELECT * FROM DBO.GET_ITEM_INFO(5)

--------------------------------------------------------------------------------------
SET STATISTICS TIME ON
SELECT 
ITM.ID,ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
ITEMINFO.MINPRICE AS ENDUSUKFIYAT,
ITEMINFO.MAXPRICE AS ENYUKSEKFIYAT,
ITEMINFO.AVGPRICE AS ORTALAMAFIYAT,
ITEMINFO.TOTALSALE AS TOPLAMSATISTUTAR,
ITEMINFO.TOTALAMOUNT AS TOPLAMSATISMIKTAR

--(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENDUSUKFIYAT,
--(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENYUKSEKFIYAT
--[dbo].[GET_ITEM_TPRICE](ITM.ID,'MIN') AS ENDUSUKFIYAT,
--[dbo].[GET_ITEM_TPRICE](ITM.ID,'MAX') AS ENDYUSEKFIYAT,
--[dbo].[GET_ITEM_TPRICE](ITM.ID,'AVG') AS ORTALAMAFIYAT,
--[dbo].[GET_ITEM_TOTALSALE](ITM.ID) AS TOPLAMSATIS

FROM ITEMS ITM
CROSS APPLY DBO.GET_ITEM_INFO(ITM.ID) AS ITEMINFO --CROSS APPLY INNER JOIN GIBI AMA FUCTION TABLE ILE NORAL TABLE BIRLESTIRIR